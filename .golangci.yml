run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  govet:
  revive:
    min-confidence: 0
  gocyclo:
    min-complexity: 40
  # maligned is deprecated, replaced by fieldalignment
  fieldalignment:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  misspell:
    locale: US
  lll:
    line-length: 160
  goimports:
    local-prefixes: github.com/ginsys/forward-email
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - hugeParam
      - exitAfterDefer
      - paramTypeCombine
      - rangeValCopy
      - appendAssign
      - dupBranchBody
      - emptyStringTest
      - equalFold
  depguard:
    rules:
      main:
        allow:
          - $gostd
          - github.com/ginsys/forward-email
          - github.com/spf13/cobra
          - github.com/spf13/viper
          - github.com/99designs/keyring
          - github.com/olekukonko/tablewriter
          - golang.org/x/term
          - gopkg.in/yaml.v3
        deny:
          - pkg: "github.com/pkg/errors"
            desc: "Should be replaced by standard lib errors package"

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - depguard
    - dogsled
    # - dupl          # disabled: too noisy, prefer targeted refactors
    - errcheck
    - copyloopvar
    - exhaustive
    - goconst
    - gocritic
    # - gocyclo       # disabled: complexity thresholds enforced via reviews
    - gofmt
    - goimports
    - revive
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - mnd
        - goconst
        - errcheck
        - gosec
        - unparam
        - lll
        - dupl
        - shadow
        - revive
        - misspell

    # Allow unchecked json encode in tests
    - path: _test\.go
      linters:
        - errcheck
      text: 'NewEncoder\('
    # Allow unchecked json decode in tests
    - path: _test\.go
      linters:
        - errcheck
      text: 'NewDecoder\('

    # Allow gocritic httpNoBody suggestions in tests
    - path: _test\.go
      linters:
        - gocritic
      text: 'httpNoBody'
    
    # Allow standard library imports everywhere
    - linters:
        - depguard
      text: "import .* is not allowed from list 'main'"
      source: "^import \"(context|fmt|os|syscall|time|net/|encoding/|path/|runtime)\""

    # Allow constant suggestions in error mapping file
    - path: pkg/errors/errors\.go
      linters:
        - goconst
    
    # Allow magic numbers in configuration defaults
    - path: config\.go
      linters:
        - mnd
    
    # Allow stuttering in API package names
    - linters:
        - revive
      text: "stutters"
    
    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
